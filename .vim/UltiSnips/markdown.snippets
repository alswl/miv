# snippet `` "code"
# `${0:${VISUAL}}`
# endsnippet


snippet more "more"
<!-- more -->
endsnippet


snippet del "del"
<del>${0:${VISUAL}}</del>
endsnippet


snippet meeting "会议记录"


## ${0}会议记录 `#!/bin/bash
date '+%Y-%m-%d'`

参会人：



会议材料：




需要讨论解决问题：

- Question


会议过程记录：

- Topic


遗留问题：

- Question



endsnippet


snippet card "卡片"

## 术语卡


## 人名卡


## 反常识卡


## 金句卡


## 行动卡


## 技巧卡


## 任意卡


endsnippet


snippet issue "问题"

## 问题： `#!/bin/bash
date '+%Y-%m-%d'`

参会人：

- A


问题：

A


解决问题方向：

- A


解决方案：

- A
- B


优劣分析：

- A
- B


待办项：

- A


endsnippet


snippet today "Today"
`#!/bin/bash
date '+%Y-%m-%d'`
endsnippet

snippet now "Today"
`#!/bin/bash
date '+%Y-%m-%d %H:%M:%S'`
endsnippet

snippet planning "计划"
## 计划 `#!/bin/bash
date '+%Y-%m-%d'`

**站会同步**



**上周任务遗留**



**本周任务**



**Inbox**



**风险和问题**



**个人思考**



**会议记录**



endsnippet

snippet review "Review"

## Review - `#!/bin/bash
date '+%Y-%m-%d'`

感受：


正面：


负面：


问题:


思考：


行动：


记录：


endsnippet


snippet inbox "Inbox"

## Inbox - `#!/bin/bash
date '+%Y-%m-%d'`

endsnippet

snippet table "Table"
| A             | B             | C             | D             |
| ---           | ---           | ---           | ---           |
|               |               |               |               |
|               |               |               |               |
|               |               |               |               |
|               |               |               |               |

endsnippet

snippet 10l "10 Empty Lines"
${0}









endsnippet

snippet 30l "30 Empty Lines"
${0}





























endsnippet


snippet interview "Interview"

## Interview ${1}

优：


劣：


小结：


问题：

- 最近几年从事的技术领域是什么
  - ${0}


endsnippet

snippet api "API Document"
- Name：${1}
- Path
- Method: 
- Params
- Request Payload
- Response
endsnippet

snippet reading "Reading Note"

感想：

${0}

笔记：

- 链接
  - 
- 题材
  - 
- 主题
  - 
- 阅读对象
  - 
- 阅读前问题
  - 
- 阅读中问题
  - 
- 脉络
  - 
- 给我带来的冲击和改变
  - 
- 本文提到的其他书籍
  - 
- 作者
  - 
- 评价
  - 优点
    - 
  - 缺点
    - 

摘抄：


endsnippet


snippet docvoting "文档标记"

- 类型 指南 / 产品手册 / 产品开发 / 专项 / 记录 / 管理 / 其他
- 紧急度 低 / 中 / 高
- 重要度 低 / 中 / 高 
- 难度 低 / 中 / 高 
- 文档质量 低 / 中 / 高 

endsnippet



snippet failure "故障事件"

## 故障 `#!/bin/bash
date '+%Y-%m-%d'`

元数据：

- 开始时间：
- 结束时间：
- 吹哨人：
- 参与人：



表现：



时间线：



补充资料：



根因：



如何防范：



Hint：


endsnippet


snippet doc "Simple Document"


## Motivation


### Goal


## Searching and Background


## Proposal


## Implementations


## Tasks


## References


endsnippet


snippet oncall "On-call 处理"

## On-call `#!/bin/bash
date '+%Y-%m-%d'`

元数据：

- 开始时间：
- 结束时间：
- 吹哨者：
- 参与人：



表现：



排查过程：



补充资料：



endsnippet


snippet playbook "Playbook"

## 告警影响面

> 这段是用来说明两个点：
>
> - 这个告警是做什么的？
> - 产生这个告警的影响面通常是什么？



## 告警排查思路

> 这段是用来列举产生这个告警的常用排查思路。
> 例如，常用的预先设计好的 dashboard 的URL，临场分析的 PromQL 的一些引导语句，日志目录需要排查的字段等等。
>
> 这段会有对应的现象和应对止血手段。内容会随着告警的一次次的排查而变的丰富。



## 告警升级（Playbook无效怎么办）

> 这段记录这个 Playbook 的相关元数据，以及对应如果 Playbook 内容无法解决告警问题，该怎么办。
> 例如，给出告警 owner 的名字，系统 owner的名字等等。



## 告警数据源（Optional）



endsnippet
