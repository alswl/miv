snippet alpine "alpine"
FROM alpine:3.14

RUN apk update && apk add --no-cache bash make curl git util-linux util-linux-doc binutils findutils readline

endsnippet

snippet debian "debian"
FROM debian:10.8-slim

RUN apt update && apt install bash make curl git binutils findutils libreadline7 && apt clean

endsnippet

snippet go "go"
FROM golang:1.16.5-buster as builder
# build-env contains all dependencies
#

WORKDIR app

ENV GOPATH /go
ENV GOPROXY=""
ENV GOPRIVATE=""
ENV GOFLAGS=""

ARG CMD_DIR=./cmd
ARG ROOT=/path
ARG VERSION=
ARG COMMIT=

RUN export CGO_ENABLED=0 GOOS=linux GOARCH=amd64

# all go mod id downloaded in build-env image
COPY . .

RUN go build -i -v -o /tmp/notifier                           \
	-ldflags "-s -w -X ${ROOT}/pkg/version.Version=${VERSION}  \
	-X ${ROOT}/pkg/version.Commit=${COMMIT}                    \
	-X ${ROOT}/pkg/version.Package=${ROOT}"                    \
	${CMD_DIR}/app;

FROM alpine:3.7
RUN apk update && apk add --no-cache bash make curl git util-linux util-linux-doc binutils findutils readline

WORKDIR /

COPY --from=builder /tmp/app /app

ENTRYPOINT ["/app"]

endsnippet

snippet goenv "goenv"
FROM golang:1.16.5-buster

# add your dependencies
RUN apt update && apt install bash make curl git binutils findutils libreadline7 && apt clean


WORKDIR /knives

ENV GOPATH /go
ENV GOPROXY="https://goproxy.cn,direct"
ENV GOPRIVATE="*.test.com"
ENV GOFLAGS=""


RUN export CGO_ENABLED=0 GOOS=linux GOARCH=amd64

RUN                                                                                     \
      mkdir -p $HOME/.ssh &&                                                            \
      chmod 700 $HOME/.ssh &&                                                           \
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts &&                            \
      ssh-keyscan -t rsa gitlab.test.com >> ~/.ssh/known_hosts &&                       \
      git config --global url.git@github.com:.insteadOf https://github.com &&           \
      git config --global --add url.git@github.com:.insteadOf http://gitlab.test.com && \
      git config --global --add url.git@github.com:.insteadOf http://gitlab.test.com && \
      echo -n "";

# copy go.mod first, avoid too many copy
COPY go.mod .
RUN --mount=type=ssh go mod download


endsnippet
