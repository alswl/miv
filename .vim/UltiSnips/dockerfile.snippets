snippet alpine "alpine"
FROM alpine:3.14

RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories
RUN apk update && apk add --no-cache bash make curl git util-linux util-linux-doc binutils findutils readline

endsnippet

snippet debian "debian"
FROM debian:10.8-slim
RUN sed -i "s@http://.*.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
RUN apt update && apt install -y bash make curl git binutils findutils libreadline7 && apt clean && rm -rf /var/apt/cache/*

RUN apt update && apt install -y bash make curl git binutils findutils libreadline7 && apt clean

endsnippet

snippet go "go"
FROM golang:1.16.5-buster as builder
RUN sed -i "s@http://.*.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
RUN apt update && apt install -y bash make curl git binutils findutils libreadline7 && apt clean && rm -rf /var/apt/cache/*

# build-env contains all dependencies
#

WORKDIR /app

ENV GOPATH /go
ENV GOPROXY=""
ENV GOPRIVATE=""
ENV GOFLAGS=""

# all go mod id downloaded in build-env image
COPY Makefile .
COPY go.mod .
COPY go.sum .
RUN make download


FROM alpine:3.7
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apk/repositories
RUN apk update && apk add --no-cache bash make curl git util-linux util-linux-doc binutils findutils readline

WORKDIR /

COPY --from=builder /app/bin/app /app

ENTRYPOINT ["/app"]

endsnippet

snippet goenv "goenv"
FROM golang:1.16.5-buster
RUN sed -i "s@http://.*.debian.org@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
RUN apt update && apt install -y bash make curl git binutils findutils libreadline7 && apt clean && rm -rf /var/apt/cache/*
# add your dependencies


WORKDIR /knives

ENV GOPATH /go
ENV GOPROXY="https://goproxy.cn,direct"
ENV GOPRIVATE="*.test.com"
ENV GOFLAGS=""


RUN export CGO_ENABLED=0 GOOS=linux GOARCH=amd64

RUN                                                                                     \
      mkdir -p $HOME/.ssh &&                                                            \
      chmod 700 $HOME/.ssh &&                                                           \
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts &&                            \
      ssh-keyscan -t rsa gitlab.test.com >> ~/.ssh/known_hosts &&                       \
      git config --global url.git@github.com:.insteadOf https://github.com &&           \
      git config --global --add url.git@github.com:.insteadOf http://gitlab.test.com && \
      git config --global --add url.git@github.com:.insteadOf http://gitlab.test.com && \
      echo -n "";

# copy go.mod first, avoid too many copy
COPY go.mod .
RUN --mount=type=ssh go mod download


endsnippet

snippet node "node"
FROM node:13.4.0-stretch-slim

# basic
RUN apt-get update
RUN npm install -g cnpm --registry=https://registry.npm.taobao.org
RUN npm config set registry https://registry.npm.taobao.org
endsnippet


snippet gitbook "gitbook"
FROM node:13.4.0-stretch-slim

# basic
RUN apt-get update
RUN apt-get install -y make jq zip git

# install fonts Noto Sans CJK SC for Simplified Chinese
RUN apt-get install -y fonts-noto-cjk

# install calibre
RUN apt-get install -y calibre
RUN apt-get clean

RUN npm install -g cnpm --registry=https://registry.npm.taobao.org
RUN npm config set registry https://registry.npm.taobao.org

RUN tnpm install -g gitbook-cli
RUN tnpm install -g markdownlint-cli

RUN gitbook fetch 3.2.3
endsnippet
